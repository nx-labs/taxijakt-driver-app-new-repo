{"version":3,"file":"src_app_pages_forgot-password_forgot-password_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;AAC+C;AACmB;AACX;AAEV;AAEyB;AAEV;;;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAkB;KAC9B;CACF,CAAC;AAaK,MAAM,wBAAwB;;gGAAxB,wBAAwB;qHAAxB,wBAAwB;yHAV1B;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,kEAAqB,CAAC,MAAM,CAAC;YAC7B,2EAAgB;SACjB;mIAGU,wBAAwB,mBAFpB,qEAAkB,aAP/B,yDAAY;QACZ,uDAAW;QACX,+DAAmB;QACnB,uDAAW,6DAEX,2EAAgB;;;;;;;;;;;;;;;;;;;;ACxBgD;AAC3B;AACO;;;;;;;ICkBtC,0EAAmL;IACjL,0EAAuD;IACvD,uEAAM;IAAA,uDAAwB;IAAA,4DAAO;;;IAA/B,0DAAwB;IAAxB,sFAAwB;;;IAHlC,wEAAmE;IACjE,+HAGM;IACR,qEAAe;;;;IAJe,0DAAqJ;IAArJ,yOAAqJ;;ADTpL,MAAM,kBAAkB;IAU7B,YACS,MAAc,EACd,IAAoB;QADpB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAgB;QAT7B,wBAAmB,GAAG;YACpB,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;gBACnD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sBAAsB,EAAE;aACrD;SACF,CAAC;QAMA,IAAI,CAAC,kBAAkB,GAAG,IAAI,qDAAS,CAAC;YACtC,OAAO,EAAE,IAAI,uDAAW,CAAC,eAAe,EAAE,8DAAkB,CAAC;gBAC3D,+DAAmB;gBACnB,8DAAkB,CAAC,iDAAiD,CAAC;aACtE,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC;IAED,kCAAkC;IAClC,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,4CAA4C;IAC5C,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;;oFAnCU,kBAAkB;gHAAlB,kBAAkB;QCZ/B,6EAAY;QAGN,6EAAmC;QACrC,4DAAc;QACd,4EAAW;QAAA,2EAAgB;QAAA,4DAAY;QAI3C,iFAA6C;QACpB,gFAAqB;QAAA,4DAAK;QACjD,uEAA2B;QACzB,iJACF;QAAA,4DAAI;QACJ,2EAAsE;QAA/B,+IAAY,qBAAiB,IAAC;QACnE,+EAA2C;QAEvC,2EAAkI;QACpI,4DAAW;QACX,0EAA6B;QAC3B,mIAKe;QACjB,4DAAM;QAGR,kFAA2G;QAAA,0EAAc;QAAA,4DAAa;;QAflI,2DAAgC;QAAhC,6FAAgC;QAMK,0DAA4B;QAA5B,kGAA4B;QASD,0DAAsC;QAAtC,mGAAsC","sources":["./src/app/pages/forgot-password/forgot-password.module.ts","./src/app/pages/forgot-password/forgot-password.page.ts","./src/app/pages/forgot-password/forgot-password.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n","import { Component } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\n\n@Component({\n  selector:    'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls:   [\n\t  './styles/forgot-password.page.scss'\n  ]\n})\nexport class ForgotPasswordPage {\n  forgotPasswordForm: FormGroup;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ]\n  };\n\n  constructor(\n    public router: Router,\n    public menu: MenuController\n  ) {\n    this.forgotPasswordForm = new FormGroup({\n      'email': new FormControl('test@test.com', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ]))\n    });\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(false);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  recoverPassword(): void {\n    console.log(this.forgotPasswordForm.value);\n    this.router.navigate(['app/start']);\n  }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Forgot Password?</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"forgot-password-content\">\n  <h2 class=\"auth-title\">Recover your password</h2>\n  <p class=\"recover-message\">\n    Please enter your email address and we'll send you an email to reset your password.\n  </p>\n  <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"recoverPassword()\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\n          <div class=\"error-message\" *ngIf=\"forgotPasswordForm.get('email').hasError(validation.type) && (forgotPasswordForm.get('email').dirty || forgotPasswordForm.get('email').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n    </ion-list>\n\n    <ion-button class=\"reset-password-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!forgotPasswordForm.valid\">Reset Password</ion-button>\n  </form>\n</ion-content>\n"],"names":[],"sourceRoot":"webpack:///"}