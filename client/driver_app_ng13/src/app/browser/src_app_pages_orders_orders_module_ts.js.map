{"version":3,"file":"src_app_pages_orders_orders_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAOuD;AACD;AACA;AACC;AACD;AACoB;AACU;AAC/B;;;AAErD,MAAM,MAAM,GAAW;IACtB;QACC,IAAI,EAAO,EAAE;QACb,SAAS,EAAE,oDAAU;KACrB;CACD,CAAC;AAeK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAXlB;YACR,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,kEAAqB,CAAC,MAAM,CAAC;YAC7B,2EAAgB;YAChB,uFAAkB;SAClB;mIAGU,gBAAgB,mBAFX,oDAAU,aARzB,yDAAY;QACZ,uDAAW;QACX,+DAAmB;QACnB,uDAAW,6DAEX,2EAAgB;QAChB,uFAAkB;;;;;;;;;;;;;;;;;;;;;;;ACtBmD;AAEE;AACD;AACF;;;;;;;;;ICHpE,sEAAoD;IAC/C,oEAAS;IAAA,4DAAK;;;IAIlB,2EAA0D;IAC9C,uDAAc;IAAA,4DAAY;;;IAA1B,0DAAc;IAAd,4EAAc;;ADOvB,MAAM,UAAU;IAGtB,YACQ,YAAiC,EAChC,QAAwB,EACxB,eAAgC;QAFjC,iBAAY,GAAZ,YAAY,CAAqB;QAChC,aAAQ,GAAR,QAAQ,CAAgB;QACxB,oBAAe,GAAf,eAAe,CAAiB;QALlC,SAAI,GAAW,YAAY,CAAC;QAOlC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,EAAE,wEAAc,CAAC,CAAC;QAErD,eAAe,CAAC,SAAS,EAAE,CAAC,SAAS,CACpC,CAAC,KAAe,EAAE,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC,CACD,CAAC;IACH,CAAC;IAEM,OAAO,CAAC,KAAe;QAC7B,QAAQ,KAAK,CAAC,SAAS,EAAE;YACxB,KAAK,wEAAc;gBAClB,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;gBAC3C,MAAM;SACP;IACF,CAAC;IACD,kCAAkC;IAClC,eAAe;IACf,CAAC;IAED,4CAA4C;IAC5C,eAAe;IACf,CAAC;IAED,eAAe;IACf,CAAC;;oEAjCW,UAAU;wGAAV,UAAU;QCxBvB,uEAAuB;QAEvB,iFAAoC;QAI7B,oEAAS;QAAA,4DAAK;QAGnB,mFAAkB;QAEjB,sGAEM;QAEN,2EAAU;QACT,gHAEW;QACZ,4DAAW;;QARL,0DAA4C;QAA5C,4GAA4C;QAKrB,0DAA4B;QAA5B,kGAA4B","sources":["./src/app/pages/orders/orders.module.ts","./src/app/pages/orders/orders.page.ts","./src/app/pages/orders/orders.page.html"],"sourcesContent":["/**\n * Copyright (c) 2021 Patrik Forsberg <patrik.forsberg@coldmind.com> - All Rights Reserved\n * Unauthorized copying of this file, via any medium is strictly prohibited\n * Proprietary and confidential.\n */\n\nimport { NgModule }             from '@angular/core';\nimport { CommonModule }         from '@angular/common';\nimport { FormsModule }          from '@angular/forms';\nimport { ReactiveFormsModule }  from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule }          from '@ionic/angular';\nimport { ComponentsModule }     from '../../components/components.module';\nimport { NxComponentsModule }   from \"../../nx-app/components/nx-components.module\";\nimport { OrdersPage }           from './orders.page';\n\nconst routes: Routes = [\n\t{\n\t\tpath     : '',\n\t\tcomponent: OrdersPage\n\t}\n];\n\n@NgModule(\n\t{\n\t\timports: [\n\t\t\tCommonModule,\n\t\t\tFormsModule,\n\t\t\tReactiveFormsModule,\n\t\t\tIonicModule,\n\t\t\tRouterModule.forChild(routes),\n\t\t\tComponentsModule,\n\t\t\tNxComponentsModule\n\t\t],\n\t\tdeclarations: [ OrdersPage ]\n\t})\nexport class OrdersPageModule {\n}\n","/**\n * Copyright (c) 2021 Patrik Forsberg <patrik.forsberg@coldmind.com> - All Rights Reserved\n * Unauthorized copying of this file, via any medium is strictly prohibited\n * Proprietary and confidential.\n */\n\nimport { isPlatformBrowser }        from '@angular/common';\nimport { Component, AfterViewInit } from '@angular/core';\nimport { IEventReceiver }           from \"@core/event-receiver\";\nimport { IMessage }                 from \"@core/messages/message-types\";\nimport { NxEvent }                  from \"@nxApp/events/nx-event-types\";\nimport { INxEvent }                 from \"@nxApp/events/nx-event\";\nimport { NxEventService }           from \"@nxApp/events/nx-event.service\";\nimport { NxAppManagerService }      from \"@nxApp/nx-app-manager.service\";\nimport { OrderApiService }          from \"@root/api/order-api.service\";\n\n@Component(\n\t{\n\t\tselector   : 'app-orders',\n\t\ttemplateUrl: './orders.page.html',\n\t\tstyleUrls  : [\n\t\t\t'./styles/orders.page.scss'\n\t\t]\n\t})\nexport class OrdersPage implements AfterViewInit, IEventReceiver {\n\tpublic name: string = \"OrdersPage\";\n\n\tconstructor(\n\t\tpublic nxAppService: NxAppManagerService,\n\t\tprivate nxEvents: NxEventService,\n\t\tprivate orderApiService: OrderApiService\n\t) {\n\t\tnxEvents.registerEventListener(this, NxEvent.Orders);\n\n\t\torderApiService.getOrders().subscribe(\n\t\t\t(event: IMessage) => {\n\t\t\t\tconsole.log(\"GET ORDERS SUBSCRIPTION ::\", event);\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic onEvent(event: INxEvent): void {\n\t\tswitch (event.eventType) {\n\t\t\tcase NxEvent.Orders:\n\t\t\t\tconsole.log(\"OrdersPage :: ORDERS\", event);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t// Disable side menu for this page\n\tionViewDidEnter(): void {\n\t}\n\n\t// Restore to default when leaving this page\n\tionViewDidLeave(): void {\n\t}\n\n\tngAfterViewInit(): void {\n\t}\n}\n","<nx-header></nx-header>\n\n<ion-content class=\"orders-content\">\n\n\t<ion-card>\n\t\t<ion-card-header>\n\t\t\t<h1>Bokningar</h1>\n\t\t</ion-card-header>\n\n\t\t<ion-card-content>\n\n\t\t\t<div *ngIf=\"nxAppService.marketOrders.length === 0\">\n\t\t\t\t<h3>No orders</h3>\n\t\t\t</div>\n\n\t\t\t<ion-list>\n\t\t\t\t<ion-item *ngFor=\"let order of nxAppService.marketOrders\">\n\t\t\t\t\t<ion-label>{{ order.id }}</ion-label>\n\t\t\t\t</ion-item>\n\t\t\t</ion-list>\n\t\t</ion-card-content>\n\t</ion-card>\n</ion-content>\n"],"names":[],"sourceRoot":"webpack:///"}