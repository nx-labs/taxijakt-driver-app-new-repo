{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts","./src/app/pages/login/login.page.html"],"sourcesContent":["/**\n * Copyright (c) 2021 Patrik Forsberg <patrik.forsberg@coldmind.com> - All Rights Reserved\n * Unauthorized copying of this file, via any medium is strictly prohibited\n * Proprietary and confidential.\n */\n\nimport { NgModule }             from '@angular/core';\nimport { CommonModule }         from '@angular/common';\nimport { FormsModule }          from '@angular/forms';\nimport { ReactiveFormsModule }  from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule }          from '@ionic/angular';\nimport { ComponentsModule }     from '@components/components.module';\nimport { NxComponentsModule }   from \"@nxApp/components/nx-components.module\";\nimport { LoginPage }            from './login.page';\n\nconst routes: Routes = [\n\t{\n\t\tpath     : '',\n\t\tcomponent: LoginPage\n\t}\n];\n\n@NgModule(\n\t{\n\t\timports: [\n\t\t\tCommonModule,\n\t\t\tFormsModule,\n\t\t\tReactiveFormsModule,\n\t\t\tIonicModule,\n\t\t\tRouterModule.forChild(routes),\n\t\t\tComponentsModule,\n\t\t\tNxComponentsModule\n\t\t],\n\t\tdeclarations: [ LoginPage ]\n\t})\nexport class LoginPageModule {\n}\n","/**\n * Copyright (c) 2021 Patrik Forsberg <patrik.forsberg@coldmind.com> - All Rights Reserved\n * Unauthorized copying of this file, via any medium is strictly prohibited\n * Proprietary and confidential.\n */\n\nimport { Component }         from '@angular/core';\nimport { FormControl }       from '@angular/forms';\nimport { FormGroup }         from '@angular/forms';\nimport { Validators }        from '@angular/forms';\nimport { Router }            from '@angular/router';\nimport { AlertController }   from \"@ionic/angular\";\nimport { LoadingController } from \"@ionic/angular\";\nimport { MenuController }    from '@ionic/angular';\nimport { NavigationOptions } from \"@ionic/angular/providers/nav-controller\";\nimport { DriverService }     from \"@nxApp/services/driver/driver.service\";\nimport { DriverApiService }  from \"@api/driver-api.service\";\nimport { IApiMessage }       from \"@core/messages/message-types\";\nimport { IMessage }          from \"@core/messages/message-types\";\nimport { StorageService }    from \"@core/services/storage.service\";\nimport { NxAppPages }        from \"@nxApp/app.paths\";\nimport { NxEventService }    from \"@nxApp/events/nx-event.service\";\nimport { AppNavService }     from \"@nxApp/services/app-nav.service\";\nimport { IApiLoginRes }      from \"@nxApp/types/api-login-response.type\";\nimport { AppComponent }      from \"@root/app.component\";\n\n@Component(\n\t{\n\t\tselector   : 'app-login',\n\t\ttemplateUrl: './login.page.html',\n\t\tstyleUrls  : [\n\t\t\t'./styles/login.page.scss'\n\t\t]\n\t})\nexport class LoginPage {\n\tloginForm: FormGroup;\n\tloadingCtrl: any | LoadingController;\n\n\tvalidation_messages = {\n\t\t'email'   : [\n\t\t\t{ type: 'required', message: 'Email is required.' },\n\t\t\t{ type: 'pattern', message: 'Enter a valid email.' }\n\t\t],\n\t\t'password': [\n\t\t\t{ type: 'required', message: 'Password is required.' },\n\t\t\t{ type: 'minlength', message: 'Password must be at least 5 characters long.' }\n\t\t]\n\t};\n\n\tconstructor(\n\t\tpublic router: Router,\n\t\tpublic appNavService: AppNavService,\n\t\tpublic menu: MenuController,\n\t\tprivate storage: StorageService,\n\t\tprivate nxEvents: NxEventService,\n\t\tprivate appComponent: AppComponent,\n\t\tpublic loadingController: LoadingController,\n\t\tpublic alertController: AlertController,\n\t\tprivate driverApi: DriverApiService,\n\t\tprivate driverService: DriverService\n\t) {\n\t\tconst emailValidator = Validators.compose(\n\t\t\t[\n\t\t\t\tValidators.required\n\t\t\t\t//  Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n\t\t\t]);\n\t\tthis.loginForm       = new FormGroup(\n\t\t\t{\n\t\t\t\t'email'   : new FormControl('+48888777657', emailValidator),\n\t\t\t\t'password': new FormControl('1', Validators.compose([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tValidators.minLength(1),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tValidators.required\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t});\n\t}\n\n\tasync dismissLoader() {\n\t\tif (!this.loadingCtrl) {\n\t\t\tconsole.log(\"NO LOADING CONTROLLER\");\n\t\t\treturn;\n\t\t}\n\t\tconst { role, data } = await this.loadingCtrl.onDidDismiss();\n\t\tconsole.log('Loading dismissed!');\n\t}\n\n\tasync presentLoadingWithOptions() {\n\t\tthis.loadingCtrl = await this.loadingController.create(\n\t\t\t{\n\t\t\t\tspinner        : null,\n\t\t\t\tmessage        : 'Loggar in...',\n\t\t\t\ttranslucent    : true,\n\t\t\t\tcssClass       : 'custom-class custom-loading',\n\t\t\t\tbackdropDismiss: false\n\t\t\t});\n\n\t\tawait this.loadingCtrl.present();\n\n\t\t//const { role, data } = await this.loadingCtrl.onDidDismiss();\n\t\t//console.log('Loading dismissed with role:', role);\n\t}\n\n\t// Disable side menu for this page\n\tionViewDidEnter(): void {\n\t\tthis.menu.enable(false);\n\t}\n\n\t// Restore to default when leaving this page\n\tionViewDidLeave(): void {\n\t\tthis.menu.enable(true);\n\t}\n\n\tasync showLoginFailed(): Promise<void> {\n\t\tconst alert = await this.alertController.create(\n\t\t\t{\n\t\t\t\tcssClass : 'my-custom-class',\n\t\t\t\theader   : 'Inloggning',\n\t\t\t\tsubHeader: 'Inloggning misslyckades',\n\t\t\t\tmessage  : 'Kontrollera användarnamn och lösenord.',\n\t\t\t\tbuttons  : [ 'Ok' ]\n\t\t\t}\n\t\t);\n\n\t\tawait alert.present();\n\t}\n\n\tasync openDriverStart(data?: IApiLoginRes) {\n\t\tif (data && data.driver && data.driver.id) {\n\t\t\tlet options: NavigationOptions = {\n\t\t\t\tqueryParams: {\n\t\t\t\t\tfromLogin: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.appNavService.navigateWithData(NxAppPages.Driver.url, options);\n\t\t\t//this.appNavService.navigateRoot(NxAppPages.Driver.url); // navigateWithData(NxAppPages.Driver.url, driverId);\n\t\t}\n\t\telse {\n\t\t\tthis.appNavService.internalError(\"Invalid login data\");\n\t\t}\n\t}\n\n\tasync showTerms(): Promise<void> {\n\n\t}\n\n\tasync doLogin() {\n\t\tconsole.log('do Log In');\n\n\t\tthis.presentLoadingWithOptions();\n\n\t\ttry {\n\t\t\tconst username = this.loginForm.value[ 'email' ];\n\t\t\tconst password = this.loginForm.value[ \"password\" ];\n\n\t\t\tawait this.driverApi.authenticate(username, password).subscribe(\n\t\t\t\t(value: IMessage) => {\n\t\t\t\t\tconsole.log(\"Login res: \", value);\n\n\t\t\t\t\tconst apiMessage: IApiMessage = value.data;\n\n\t\t\t\t\tconsole.log(\"authenticate :: apiMessage ::\", apiMessage);\n\n\t\t\t\t\tthis.loadingCtrl.dismiss();\n\n\t\t\t\t\tif (apiMessage.success) {\n\t\t\t\t\t\tthis.driverService.driverLogin(apiMessage.data);\n\t\t\t\t\t\tthis.openDriverStart(apiMessage.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\talert(\"Login failed, please verify username and password\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\tcatch (err) {\n\t\t\tconsole.log(\"authenticate :: error ::\", err);\n\t\t}\n\t\tfinally {\n\t\t\tconsole.log(\"Dismiss\");\n\t\t\tif (this.loadingCtrl) {\n\t\t\t\tthis.loadingCtrl.dismiss();\n\t\t\t}\n\t\t}\n\t}\n\n\tgoToForgotPassword(): void {\n\t\tconsole.log('redirect to forgot-password page');\n\t}\n}\n","<nx-header [onlyLogo]=\"true\"></nx-header>\n\n<ion-content class=\"login-content\">\n\n\t<div class=\"card\">\n\n\t\t<ion-card class=\"card\">\n\n\t\t<!--\n\t\t\t<div class=\"card-image\">\n\t\t\t\t<div style=\"padding: 1em\">\n\t\t\t\t\t<img alt=\"logo\" height=\"40\" src=\"/assets/nx-app/header-logo.png\" >\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t-->\n\t\t\t<ion-card-header color=\"medium\">\n\t\t\t\t<ion-label style=\"font-weight: bold\">Driver Login</ion-label>\n\t\t\t</ion-card-header>\n\n\t\t\t<form [formGroup]=\"loginForm\" (ngSubmit)=\"doLogin()\" class=\"card-form\">\n\t\t\t\t<div class=\"input\">\n\t\t\t\t\t<ion-input type=\"text\"\n\t\t\t\t\t\t\t   class=\"input-field\"\n\t\t\t\t\t\t\t   value=\"\"\n\t\t\t\t\t\t\t   formControlName=\"email\"></ion-input>\n\t\t\t\t\t<label class=\"input-label\">Telefonnummer</label>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"error-container\">\n\t\t\t\t\t<ng-container *ngFor=\"let validation of validation_messages.email\">\n\t\t\t\t\t\t<div class=\"error-message\"\n\t\t\t\t\t\t\t *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n\t\t\t\t\t\t\t<ion-icon name=\"information-circle-outline\"></ion-icon>\n\t\t\t\t\t\t\t<span>{{ validation.message }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"input\">\n\t\t\t\t\t<ion-input type=\"password\"\n\t\t\t\t\t\t\t   formControlName=\"password\"\n\t\t\t\t\t\t\t   class=\"input-field\"></ion-input>\n\t\t\t\t\t<label class=\"input-label\">Password</label>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"error-container\">\n\t\t\t\t\t<ng-container *ngFor=\"let validation of validation_messages.password\">\n\t\t\t\t\t\t<div class=\"error-message\"\n\t\t\t\t\t\t\t *ngIf=\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n\t\t\t\t\t\t\t<ion-icon name=\"information-circle-outline\"></ion-icon>\n\t\t\t\t\t\t\t<span>{{ validation.message }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"action\">\n\t\t\t\t\t<ion-button type=\"submit\" class=\"social-auth-btn facebook-auth-btn\"\n\t\t\t\t\t\t\t\texpand=\"block\" color=\"facebook\" [disabled]=\"!loginForm.valid\">\n\t\t\t\t\t\tLogga in\n\t\t\t\t\t</ion-button>\n\t\t\t\t</div>\n\n\t\t\t\t<div style=\"margin-top: 2em;\">\n\t\t\t\t\t<ion-button class=\"social-auth-btn google-auth-btn\" expand=\"block\" color=\"google\" [routerLink]=\"['/auth/forgot-password']\">\n\t\t\t\t\t\tGet new password\n\t\t\t\t\t</ion-button>\n\t\t\t\t</div>\n\n\n\t\t\t</form>\n\n\t\t</ion-card>\n\n\t\t<ion-card class=\"card\">\n\t\t\t<ion-card-header>\n\t\t\t\tDo you want to drive for TaxiJakt?\n\t\t\t</ion-card-header>\n\n\t\t\t<div style=\"\">\n\t\t\t\t<ion-button class=\"social-auth-btn\" expand=\"block\" color=\"medium\" [routerLink]=\"['/auth/forgot-password']\">\n\t\t\t\t\tRegister as a Driver\n\t\t\t\t</ion-button>\n\t\t\t</div>\n\n\t\t</ion-card>\n\n\t\t<div class=\"card-info\">\n\t\t\t<p>By using this app you are agreeing to our <a (click)=\"showTerms()\">Terms and Conditions</a></p>\n\t\t</div>\n\t</div>\n</ion-content>\n"],"names":[],"sourceRoot":"webpack:///"}