{"version":3,"file":"src_app_notifications_notifications_module_ts.js","mappings":"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","sources":["./src/app/notifications/notifications.module.ts","./src/app/notifications/notifications.page.ts","./src/app/notifications/notifications.page.html","./src/app/notifications/notifications.resolver.ts","./src/app/notifications/notifications.service.ts"],"sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentsModule } from '../components/components.module';\n\nimport { NotificationsPage } from './notifications.page';\nimport { NotificationsResolver } from '../notifications/notifications.resolver';\nimport { NotificationsService } from '../notifications/notifications.service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    ComponentsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: NotificationsPage,\n        resolve: {\n          data: NotificationsResolver\n        }\n      }\n    ])\n  ],\n  declarations: [ NotificationsPage ],\n  providers: [\n    NotificationsResolver,\n    NotificationsService\n  ]\n})\nexport class NotificationsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: [\n    './styles/notifications.page.scss',\n    './styles/notifications.shell.scss'\n  ]\n})\nexport class NotificationsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  notifications: any;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.subscriptions = this.route.data\n    .pipe(\n      // Extract data for this page\n      switchMap((resolvedRouteData: {source: Observable<any>}) => {\n        return resolvedRouteData['data'].source;\n      })\n    )\n    .subscribe((pageData) => {\n      this.notifications = pageData;\n    }, (error) => console.log(error));\n  }\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ion-header>\n\t<ion-toolbar color=\"primary\">\n\t\t<ion-buttons slot=\"start\">\n\t\t\t<ion-menu-button></ion-menu-button>\n\t\t</ion-buttons>\n\t\t<ion-title>\n\t\t\tNotifications\n\t\t</ion-title>\n\t</ion-toolbar>\n</ion-header>\n\n<ion-content class=\"notifications-content\">\n\t<ng-container *ngIf=\"notifications\">\n\t\t<ion-item-group>\n\t\t\t<ion-item-divider sticky>\n\t\t\t\t<ion-label>Today</ion-label>\n\t\t\t</ion-item-divider>\n\t\t\t<ion-item class=\"notification-item\" lines=\"none\" *ngFor=\"let notification of notifications.today\">\n\t\t\t\t<ion-row class=\"notification-item-wrapper\">\n\t\t\t\t\t<ion-col size=\"2\">\n\t\t\t\t\t\t<app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n\t\t\t\t\t\t\t<app-image-shell class=\"notification-image\" [src]=\"notification.image\"\n\t\t\t\t\t\t\t\t\t\t\t [alt]=\"'user image'\"></app-image-shell>\n\t\t\t\t\t\t</app-aspect-ratio>\n\t\t\t\t\t</ion-col>\n\t\t\t\t\t<ion-col class=\"details-wrapper\">\n\t\t\t\t\t\t<h2 class=\"details-name\">{{ notification.name }}</h2>\n\t\t\t\t\t\t<p class=\"details-description\">{{ notification.message }}</p>\n\t\t\t\t\t</ion-col>\n\t\t\t\t\t<ion-col size=\"2\" class=\"date-wrapper\">\n\t\t\t\t\t\t<h3 class=\"notification-date\">{{ notification.date }}</h3>\n\t\t\t\t\t</ion-col>\n\t\t\t\t</ion-row>\n\t\t\t</ion-item>\n\t\t</ion-item-group>\n\t\t<ion-item-group>\n\t\t\t<ion-item-divider sticky>\n\t\t\t\t<ion-label>Yesterday</ion-label>\n\t\t\t</ion-item-divider>\n\t\t\t<ion-item class=\"notification-item\" lines=\"none\" *ngFor=\"let notification of notifications.yesterday\">\n\t\t\t\t<ion-row class=\"notification-item-wrapper\">\n\t\t\t\t\t<ion-col size=\"2\">\n\t\t\t\t\t\t<app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n\t\t\t\t\t\t\t<app-image-shell class=\"notification-image\" [src]=\"notification.image\"\n\t\t\t\t\t\t\t\t\t\t\t [alt]=\"'user image'\"></app-image-shell>\n\t\t\t\t\t\t</app-aspect-ratio>\n\t\t\t\t\t</ion-col>\n\t\t\t\t\t<ion-col class=\"details-wrapper\">\n\t\t\t\t\t\t<h2 class=\"details-name\">{{ notification.name }}</h2>\n\t\t\t\t\t\t<p class=\"details-description\">{{ notification.message }}</p>\n\t\t\t\t\t</ion-col>\n\t\t\t\t\t<ion-col size=\"2\" class=\"date-wrapper\">\n\t\t\t\t\t\t<h3 class=\"notification-date\">{{ notification.date }}</h3>\n\t\t\t\t\t</ion-col>\n\t\t\t\t</ion-row>\n\t\t\t</ion-item>\n\t\t</ion-item-group>\n\t</ng-container>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { NotificationsService } from './notifications.service';\n\n@Injectable()\nexport class NotificationsResolver implements Resolve<any> {\n\n  constructor(private notificationsService: NotificationsService) { }\n\n  resolve() {\n    // Base Observable (where we get data from)\n    const dataObservable: Observable<any> = this.notificationsService.getData();\n\n    return { source: dataObservable };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class NotificationsService {\n  constructor(private http: HttpClient) { }\n\n  public getData(): Observable<any> {\n    return this.http.get<any>('./assets/sample-data/notifications.json');\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}